name: CI/CD

on:
  push:
    workflow_dispatch:
  #  branches: [ main, dev ]
  #pull_request:
  #  branches: [ main, dev ]

permissions:
  contents: read
  packages: write    # needed for GHCR push
  id-token: write

jobs:
  build-image:
    name: Build & Push Docker Image (GHCR)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Compute OWNER (lowercase)
        run: echo "OWNER=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push
        working-directory: app
        run: |
          IMG=ghcr.io/${OWNER}/hello-flask
          docker build -t ${IMG}:${GITHUB_SHA} -t ${IMG}:latest .
          docker push ${IMG}:${GITHUB_SHA}
          docker push ${IMG}:latest
        # Result: ghcr.io/<owner>/hello-flask:<sha> and :latest

  lint:
    name: Lint (pylint matrix)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.10", "3.11" ]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f app/requirements.txt ]; then pip install -r app/requirements.txt; fi
          pip install pylint
      - name: Run pylint
        run: |
          # Lint all .py files under app/ (adjust if needed)
          pylint $(git ls-files "app/**/*.py" "app/*.py" || echo "app/app.py")

  publish-chart:
    name: Package & Publish Helm Chart (GHCR)
    runs-on: ubuntu-latest
    needs: [build-image, lint]
    steps:
      - uses: actions/checkout@v4

      - name: Compute OWNER (lowercase)
        run: echo "OWNER=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_ENV

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.4

      - name: Bump chart appVersion to current commit (for traceability)
        working-directory: hello-flask
        run: |
          SHORT_SHA=$(echo "${GITHUB_SHA}" | cut -c1-7)
          # update appVersion in Chart.yaml
          sed -i "s/^appVersion:.*/appVersion: \"${SHORT_SHA}\"/" Chart.yaml

      - name: Helm lint & package
        working-directory: hello-flask
        run: |
          helm lint .
          helm package .
          ls -l *.tgz

      - name: Login Helm to GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" | helm registry login ghcr.io --username "${{ github.actor }}" --password-stdin

      - name: Push chart to GHCR
        working-directory: hello-flask
        run: |
          CHART_TGZ=$(ls *.tgz)
          helm push "${CHART_TGZ}" oci://ghcr.io/${OWNER}
        # Result: ghcr.io/<owner>/hello-flask:<chart version in Chart.yaml>
