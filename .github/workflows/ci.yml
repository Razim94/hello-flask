name: CI
on:
  push: { branches: [ main, dev ] }
  pull_request: { branches: [ main, dev ] }

permissions:
  contents: read
  packages: write

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix: { python-version: [ "3.10", "3.11" ] }
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: ${{ matrix.python-version }} }
      - run: |
          python -m pip install --upgrade pip
          if [ -f phase-1/requirements.txt ]; then pip install -r phase-1/requirements.txt; fi
          pip install pylint
      - name: Run pylint in phase-1
        run: |
          files=$(git ls-files "phase-1/**/*.py" "phase-1/*.py")
          [ -n "$files" ] && pylint $files || echo "No Python files found in phase-1"

  build_image:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Compute lowercase owner
        run: echo "OWNER_LC=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_ENV
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build & push image from phase-1/
        run: |
          IMAGE=ghcr.io/${OWNER_LC}/hello-flask
          docker build -t ${IMAGE}:${GITHUB_SHA} -t ${IMAGE}:latest -f phase-1/Dockerfile phase-1
          docker push ${IMAGE}:${GITHUB_SHA}
          docker push ${IMAGE}:latest

  publish_chart:
    needs: build_image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Compute lowercase owner
        run: echo "OWNER_LC=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_ENV
      - uses: azure/setup-helm@v4
        with: { version: v3.14.4 }
      - name: (Optional) set appVersion to short SHA
        working-directory: phase-3
        run: |
          short=$(echo "${GITHUB_SHA}" | cut -c1-7)
          sed -i "s/^appVersion:.*/appVersion: \"${short}\"/" Chart.yaml || true
      - name: Helm lint & package
        working-directory: phase-3
        run: |
          helm lint .
          helm package .
      - name: Login Helm to GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" | helm registry login ghcr.io --username "${{ github.repository_owner }}" --password-stdin
      - name: Push chart to GHCR
        working-directory: phase-3
        run: |
          TGZ=$(ls *.tgz)
          helm push "$TGZ" oci://ghcr.io/${OWNER_LC}
